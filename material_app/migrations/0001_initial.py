# Generated by Django 4.2.2 on 2023-08-16 19:52

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import material_app.upload_path


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("account", "0005_useraccount_roles_remove_useraccount_groups_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ContentFormat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_name",
                    models.CharField(max_length=255, verbose_name="Тип контента"),
                ),
            ],
            options={
                "verbose_name": "Тип",
                "verbose_name_plural": "Типы",
                "db_table": "content_format",
            },
        ),
        migrations.CreateModel(
            name="PatientProfiles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_of_profile",
                    models.CharField(max_length=255, verbose_name="Название"),
                ),
            ],
            options={
                "verbose_name": "Профиль пациента",
                "verbose_name_plural": "Профили пациентов",
                "db_table": "patient_profile",
            },
        ),
        migrations.CreateModel(
            name="ProductMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("product_name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Продукты",
                "db_table": "product_material",
            },
        ),
        migrations.CreateModel(
            name="Tags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_tags", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
                "db_table": "tags",
            },
        ),
        migrations.CreateModel(
            name="Material",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_material",
                    models.CharField(max_length=255, verbose_name="Название материала"),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="ЧПУ")),
                (
                    "publication",
                    ckeditor_uploader.fields.RichTextUploadingField(
                        blank=True, null=True, verbose_name="Публикация"
                    ),
                ),
                (
                    "material_files",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=material_app.upload_path.material_upload_to,
                        verbose_name="Материал",
                    ),
                ),
                (
                    "poster",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=material_app.upload_path.poster_upload_to,
                        verbose_name="Постер",
                    ),
                ),
                (
                    "preview",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=material_app.upload_path.preview_upload_to,
                        verbose_name="Превью",
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата истечения контента"
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Приоритетность"
                    ),
                ),
                (
                    "created_at",
                    models.DateField(auto_now_add=True, verbose_name="Дата добавления"),
                ),
                (
                    "updated_at",
                    models.DateField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "content_format",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="material_app.contentformat",
                        verbose_name="Тип контента",
                    ),
                ),
                (
                    "patient_profile",
                    models.ManyToManyField(
                        to="material_app.patientprofiles",
                        verbose_name="Профиль пациента",
                    ),
                ),
                (
                    "product_material",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="material_app.productmaterial",
                        verbose_name="Продукт",
                    ),
                ),
                (
                    "roles",
                    models.ManyToManyField(
                        to="account.roles", verbose_name="Для кого контент"
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(to="material_app.tags", verbose_name="Тег"),
                ),
            ],
            options={
                "verbose_name": "Материал",
                "verbose_name_plural": "Материалы",
                "db_table": "material",
            },
        ),
    ]
